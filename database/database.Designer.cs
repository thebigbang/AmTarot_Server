//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("database", "HostedGamesAccounts", "HostedGames", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(database.HostedGames), "Accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(database.Accounts))]
[assembly: EdmRelationshipAttribute("database", "HostedGamesPlayers", "HostedGames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(database.HostedGames), "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(database.Players))]
[assembly: EdmRelationshipAttribute("database", "PlayersDataHostedGames", "PlayersData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(database.PlayersData), "HostedGames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(database.HostedGames))]
[assembly: EdmRelationshipAttribute("database", "PlayersDataAccounts", "PlayersData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(database.PlayersData), "Accounts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(database.Accounts))]

#endregion

namespace database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class tarotContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new tarotContainer object using the connection string found in the 'tarotContainer' section of the application configuration file.
        /// </summary>
        public tarotContainer() : base("name=tarotContainer", "tarotContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new tarotContainer object.
        /// </summary>
        public tarotContainer(string connectionString) : base(connectionString, "tarotContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new tarotContainer object.
        /// </summary>
        public tarotContainer(EntityConnection connection) : base(connection, "tarotContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HostedGames> HostedGames
        {
            get
            {
                if ((_HostedGames == null))
                {
                    _HostedGames = base.CreateObjectSet<HostedGames>("HostedGames");
                }
                return _HostedGames;
            }
        }
        private ObjectSet<HostedGames> _HostedGames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Accounts> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Accounts>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Accounts> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Versions> Versions
        {
            get
            {
                if ((_Versions == null))
                {
                    _Versions = base.CreateObjectSet<Versions>("Versions");
                }
                return _Versions;
            }
        }
        private ObjectSet<Versions> _Versions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayersData> PlayersData
        {
            get
            {
                if ((_PlayersData == null))
                {
                    _PlayersData = base.CreateObjectSet<PlayersData>("PlayersData");
                }
                return _PlayersData;
            }
        }
        private ObjectSet<PlayersData> _PlayersData;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HostedGames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHostedGames(HostedGames hostedGames)
        {
            base.AddObject("HostedGames", hostedGames);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Accounts accounts)
        {
            base.AddObject("Accounts", accounts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Versions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersions(Versions versions)
        {
            base.AddObject("Versions", versions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayersData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayersData(PlayersData playersData)
        {
            base.AddObject("PlayersData", playersData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="Accounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Players))]
    [KnownTypeAttribute(typeof(Anon))]
    public partial class Accounts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Accounts object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        public static Accounts CreateAccounts(global::System.Guid id, global::System.DateTime lastLogin)
        {
            Accounts accounts = new Accounts();
            accounts.Id = id;
            accounts.LastLogin = lastLogin;
            return accounts;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttemptedBlock
        {
            get
            {
                return _AttemptedBlock;
            }
            set
            {
                OnAttemptedBlockChanging(value);
                ReportPropertyChanging("AttemptedBlock");
                _AttemptedBlock = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AttemptedBlock");
                OnAttemptedBlockChanged();
            }
        }
        private global::System.String _AttemptedBlock = "False";
        partial void OnAttemptedBlockChanging(global::System.String value);
        partial void OnAttemptedBlockChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "HostedGamesAccounts", "HostedGames")]
        public EntityCollection<HostedGames> GameJoined
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HostedGames>("database.HostedGamesAccounts", "HostedGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HostedGames>("database.HostedGamesAccounts", "HostedGames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "PlayersDataAccounts", "PlayersData")]
        public PlayersData PlayersData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayersData>("database.PlayersDataAccounts", "PlayersData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayersData>("database.PlayersDataAccounts", "PlayersData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlayersData> PlayersDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlayersData>("database.PlayersDataAccounts", "PlayersData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlayersData>("database.PlayersDataAccounts", "PlayersData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="Anon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Anon : Accounts
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Anon object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="screenName">Initial value of the ScreenName property.</param>
        public static Anon CreateAnon(global::System.Guid id, global::System.DateTime lastLogin, global::System.String screenName)
        {
            Anon anon = new Anon();
            anon.Id = id;
            anon.LastLogin = lastLogin;
            anon.ScreenName = screenName;
            return anon;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreenName
        {
            get
            {
                return _ScreenName;
            }
            set
            {
                OnScreenNameChanging(value);
                ReportPropertyChanging("ScreenName");
                _ScreenName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScreenName");
                OnScreenNameChanged();
            }
        }
        private global::System.String _ScreenName;
        partial void OnScreenNameChanging(global::System.String value);
        partial void OnScreenNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="HostedGames")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HostedGames : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HostedGames object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cardsOrderList">Initial value of the CardsOrderList property.</param>
        /// <param name="playerMax">Initial value of the PlayerMax property.</param>
        /// <param name="gameType">Initial value of the GameType property.</param>
        public static HostedGames CreateHostedGames(global::System.Int32 id, global::System.String cardsOrderList, global::System.Int32 playerMax, global::System.String gameType)
        {
            HostedGames hostedGames = new HostedGames();
            hostedGames.Id = id;
            hostedGames.CardsOrderList = cardsOrderList;
            hostedGames.PlayerMax = playerMax;
            hostedGames.GameType = gameType;
            return hostedGames;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardsOrderList
        {
            get
            {
                return _CardsOrderList;
            }
            set
            {
                OnCardsOrderListChanging(value);
                ReportPropertyChanging("CardsOrderList");
                _CardsOrderList = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardsOrderList");
                OnCardsOrderListChanged();
            }
        }
        private global::System.String _CardsOrderList;
        partial void OnCardsOrderListChanging(global::System.String value);
        partial void OnCardsOrderListChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerMax
        {
            get
            {
                return _PlayerMax;
            }
            set
            {
                OnPlayerMaxChanging(value);
                ReportPropertyChanging("PlayerMax");
                _PlayerMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerMax");
                OnPlayerMaxChanged();
            }
        }
        private global::System.Int32 _PlayerMax;
        partial void OnPlayerMaxChanging(global::System.Int32 value);
        partial void OnPlayerMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GameType
        {
            get
            {
                return _GameType;
            }
            set
            {
                OnGameTypeChanging(value);
                ReportPropertyChanging("GameType");
                _GameType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GameType");
                OnGameTypeChanged();
            }
        }
        private global::System.String _GameType;
        partial void OnGameTypeChanging(global::System.String value);
        partial void OnGameTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLaunched
        {
            get
            {
                return _IsLaunched;
            }
            set
            {
                OnIsLaunchedChanging(value);
                ReportPropertyChanging("IsLaunched");
                _IsLaunched = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLaunched");
                OnIsLaunchedChanged();
            }
        }
        private global::System.Boolean _IsLaunched = false;
        partial void OnIsLaunchedChanging(global::System.Boolean value);
        partial void OnIsLaunchedChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Format du string: [playerId]cardName#[playerId2]carName2#[playerId]cardName#[playerId4]carName4#
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardsInTurn
        {
            get
            {
                return _CardsInTurn;
            }
            set
            {
                OnCardsInTurnChanging(value);
                ReportPropertyChanging("CardsInTurn");
                _CardsInTurn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardsInTurn");
                OnCardsInTurnChanged();
            }
        }
        private global::System.String _CardsInTurn;
        partial void OnCardsInTurnChanging(global::System.String value);
        partial void OnCardsInTurnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "HostedGamesAccounts", "Accounts")]
        public EntityCollection<Accounts> Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Accounts>("database.HostedGamesAccounts", "Accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Accounts>("database.HostedGamesAccounts", "Accounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "HostedGamesPlayers", "Players")]
        public Players Hoster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("database.HostedGamesPlayers", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("database.HostedGamesPlayers", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Players> HosterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("database.HostedGamesPlayers", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Players>("database.HostedGamesPlayers", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "PlayersDataHostedGames", "PlayersData")]
        public EntityCollection<PlayersData> PlayersData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayersData>("database.PlayersDataHostedGames", "PlayersData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayersData>("database.PlayersDataHostedGames", "PlayersData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="Players")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Players : Accounts
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Players object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="screenName">Initial value of the ScreenName property.</param>
        /// <param name="pwd">Initial value of the Pwd property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Players CreatePlayers(global::System.Guid id, global::System.DateTime lastLogin, global::System.String username, global::System.String screenName, global::System.String pwd, global::System.String email)
        {
            Players players = new Players();
            players.Id = id;
            players.LastLogin = lastLogin;
            players.Username = username;
            players.ScreenName = screenName;
            players.Pwd = pwd;
            players.Email = email;
            return players;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreenName
        {
            get
            {
                return _ScreenName;
            }
            set
            {
                OnScreenNameChanging(value);
                ReportPropertyChanging("ScreenName");
                _ScreenName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScreenName");
                OnScreenNameChanged();
            }
        }
        private global::System.String _ScreenName;
        partial void OnScreenNameChanging(global::System.String value);
        partial void OnScreenNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pwd
        {
            get
            {
                return _Pwd;
            }
            set
            {
                OnPwdChanging(value);
                ReportPropertyChanging("Pwd");
                _Pwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pwd");
                OnPwdChanged();
            }
        }
        private global::System.String _Pwd;
        partial void OnPwdChanging(global::System.String value);
        partial void OnPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "HostedGamesPlayers", "HostedGames")]
        public HostedGames GameHosted
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.HostedGamesPlayers", "HostedGames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.HostedGamesPlayers", "HostedGames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HostedGames> GameHostedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.HostedGamesPlayers", "HostedGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HostedGames>("database.HostedGamesPlayers", "HostedGames", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="PlayersData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayersData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayersData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cards">Initial value of the Cards property.</param>
        public static PlayersData CreatePlayersData(global::System.Int32 id, global::System.String cards)
        {
            PlayersData playersData = new PlayersData();
            playersData.Id = id;
            playersData.Cards = cards;
            return playersData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cards
        {
            get
            {
                return _Cards;
            }
            set
            {
                OnCardsChanging(value);
                ReportPropertyChanging("Cards");
                _Cards = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cards");
                OnCardsChanged();
            }
        }
        private global::System.String _Cards;
        partial void OnCardsChanging(global::System.String value);
        partial void OnCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Decimal _Points = 0m;
        partial void OnPointsChanging(global::System.Decimal value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean GameJoined
        {
            get
            {
                return _GameJoined;
            }
            set
            {
                OnGameJoinedChanging(value);
                ReportPropertyChanging("GameJoined");
                _GameJoined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameJoined");
                OnGameJoinedChanged();
            }
        }
        private global::System.Boolean _GameJoined = false;
        partial void OnGameJoinedChanging(global::System.Boolean value);
        partial void OnGameJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPlayersTurn
        {
            get
            {
                return _IsPlayersTurn;
            }
            set
            {
                OnIsPlayersTurnChanging(value);
                ReportPropertyChanging("IsPlayersTurn");
                _IsPlayersTurn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPlayersTurn");
                OnIsPlayersTurnChanged();
            }
        }
        private global::System.Boolean _IsPlayersTurn = false;
        partial void OnIsPlayersTurnChanging(global::System.Boolean value);
        partial void OnIsPlayersTurnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "PlayersDataHostedGames", "HostedGames")]
        public HostedGames HostedGames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.PlayersDataHostedGames", "HostedGames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.PlayersDataHostedGames", "HostedGames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HostedGames> HostedGamesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HostedGames>("database.PlayersDataHostedGames", "HostedGames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HostedGames>("database.PlayersDataHostedGames", "HostedGames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("database", "PlayersDataAccounts", "Accounts")]
        public Accounts Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("database.PlayersDataAccounts", "Accounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("database.PlayersDataAccounts", "Accounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Accounts> AccountsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Accounts>("database.PlayersDataAccounts", "Accounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Accounts>("database.PlayersDataAccounts", "Accounts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="database", Name="Versions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Versions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Versions object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="server">Initial value of the Server property.</param>
        /// <param name="db">Initial value of the Db property.</param>
        /// <param name="client">Initial value of the Client property.</param>
        public static Versions CreateVersions(global::System.Int32 id, global::System.String server, global::System.String db, global::System.String client)
        {
            Versions versions = new Versions();
            versions.Id = id;
            versions.Server = server;
            versions.Db = db;
            versions.Client = client;
            return versions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Server
        {
            get
            {
                return _Server;
            }
            set
            {
                OnServerChanging(value);
                ReportPropertyChanging("Server");
                _Server = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Server");
                OnServerChanged();
            }
        }
        private global::System.String _Server;
        partial void OnServerChanging(global::System.String value);
        partial void OnServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Db
        {
            get
            {
                return _Db;
            }
            set
            {
                OnDbChanging(value);
                ReportPropertyChanging("Db");
                _Db = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Db");
                OnDbChanged();
            }
        }
        private global::System.String _Db;
        partial void OnDbChanging(global::System.String value);
        partial void OnDbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Client
        {
            get
            {
                return _Client;
            }
            set
            {
                OnClientChanging(value);
                ReportPropertyChanging("Client");
                _Client = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Client");
                OnClientChanged();
            }
        }
        private global::System.String _Client;
        partial void OnClientChanging(global::System.String value);
        partial void OnClientChanged();

        #endregion

    
    }

    #endregion

    
}
